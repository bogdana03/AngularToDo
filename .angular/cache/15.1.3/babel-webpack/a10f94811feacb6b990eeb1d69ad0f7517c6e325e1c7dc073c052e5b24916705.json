{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet TodoComponent = class TodoComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.tasks = [];\n    this.inprogress = [];\n    this.done = [];\n  }\n  //form to create to do items\n  ngOnInit() {\n    this.todoForm = this.fb.group({\n      item: ['', Validators.required]\n    });\n  }\n  // method to add new task from the form to the lists\n  addTask() {\n    this.tasks.push({\n      description: this.todoForm.value.item,\n      done: false\n    });\n  }\n  deleteTask(i) {\n    this.tasks.splice(i, 1);\n  }\n  //mthod for drop items to lists\n  drop(event) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(event.previousContainer.data, event.container.data, event.previousIndex, event.currentIndex);\n    }\n  }\n};\nTodoComponent = __decorate([Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\n//created list colums\n], TodoComponent);\nexport { TodoComponent };","map":{"version":3,"mappings":";AAAA,SAAsBA,eAAe,EAAEC,iBAAiB,QAAQ,wBAAwB;AACxF,SAASC,SAAS,QAAgB,eAAe;AACjD,SAAiCC,UAAU,QAAO,gBAAgB;AAS3D,IAAMC,aAAa,GAAnB,MAAMA,aAAa;EAKxBC,YAAoBC,EAAgB;IAAhB,OAAE,GAAFA,EAAE;IAHtB,UAAK,GAAc,EAAE;IACrB,eAAU,GAAc,EAAE;IAC1B,SAAI,GAAc,EAAE;EACmB;EAEvC;EACAC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC5BC,IAAI,EAAG,CAAC,EAAE,EAAEP,UAAU,CAACQ,QAAQ;KAEhC,CAAC;EACJ;EAEA;EACAC,OAAO;IACL,IAAI,CAACC,KAAK,CAACC,IAAI,CAAC;MACdC,WAAW,EAAC,IAAI,CAACP,QAAQ,CAACQ,KAAK,CAACN,IAAI;MACpCO,IAAI,EAAC;KACN,CAAC;EACJ;EAEAC,UAAU,CAACC,CAAS;IAClB,IAAI,CAACN,KAAK,CAACO,MAAM,CAACD,CAAC,EAAC,CAAC,CAAC;EAExB;EAEA;EACAE,IAAI,CAACC,KAA2B;IAC9B,IAAIA,KAAK,CAACC,iBAAiB,KAAKD,KAAK,CAACE,SAAS,EAAE;MAC/CxB,eAAe,CAACsB,KAAK,CAACE,SAAS,CAACC,IAAI,EAAEH,KAAK,CAACI,aAAa,EAAEJ,KAAK,CAACK,YAAY,CAAC;KAC/E,MAAM;MACL1B,iBAAiB,CACfqB,KAAK,CAACC,iBAAiB,CAACE,IAAI,EAC5BH,KAAK,CAACE,SAAS,CAACC,IAAI,EACpBH,KAAK,CAACI,aAAa,EACnBJ,KAAK,CAACK,YAAY,CACnB;;EAEL;CACD;AAzCYvB,aAAa,eANzBF,SAAS,CAAC;EACT0B,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC;AACD;AAAA,GACa1B,aAAa,CAyCzB;SAzCYA,aAAa","names":["moveItemInArray","transferArrayItem","Component","Validators","TodoComponent","constructor","fb","ngOnInit","todoForm","group","item","required","addTask","tasks","push","description","value","done","deleteTask","i","splice","drop","event","previousContainer","container","data","previousIndex","currentIndex","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/bogdanasorinescu/Documents/git/AngularToDo/src/app/todo/todo.component.ts"],"sourcesContent":["import { CdkDragDrop, moveItemInArray, transferArrayItem } from '@angular/cdk/drag-drop';\nimport { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators} from '@angular/forms'\nimport { ITask } from '../model/task';\n\n@Component({\n  selector: 'app-todo',\n  templateUrl: './todo.component.html',\n  styleUrls: ['./todo.component.css']\n})\n//created list colums\nexport class TodoComponent implements OnInit {\n  todoForm !: FormGroup;\n  tasks : ITask [] = [];\n  inprogress : ITask [] = [];\n  done : ITask [] = [];\n  constructor(private fb : FormBuilder) {}\n\n  //form to create to do items\n  ngOnInit(): void {\n    this.todoForm = this.fb.group({\n      item : ['', Validators.required]\n\n    })\n  }\n\n  // method to add new task from the form to the lists\n  addTask(){\n    this.tasks.push({\n      description:this.todoForm.value.item,\n      done:false\n    })\n  }\n\n  deleteTask(i: number){\n    this.tasks.splice(i,1)\n\n  }\n  \n  //mthod for drop items to lists\n  drop(event: CdkDragDrop<ITask[]>) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex,\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}